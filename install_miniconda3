#! /usr/bin/env bash
#
#  Install a miniconda3 python 
#

# some examples    @todo  fix this like done in install_anaconda3
url=https://repo.anaconda.com/miniconda/Miniconda3-py39_24.5.0-0-Linux-x86_64.sh
url=https://repo.anaconda.com/miniconda/Miniconda3-py39_24.7.1-0-MacOSX-arm64.sh
url=https://repo.anaconda.com/miniconda/Miniconda3-py39_24.7.1-0-MacOSX-x86_64.sh
url=https://repo.anaconda.com/miniconda/Miniconda3-py39_24.7.1-0-Linux-x86_64.sh
url=https://repo.anaconda.com/miniconda/Miniconda3-py311_24.7.1-0-Linux-x86_64.sh
url=https://repo.anaconda.com/miniconda/Miniconda3-py312_24.5.0-0-Linux-x86_64.sh
url=https://repo.anaconda.com/miniconda/Miniconda3-py312_24.7.1-0-Linux-x86_64.sh


  dir=$(pwd)/miniconda3      # where miniconda will be located
 wget=wget                   # use wgetc is you have my cashing version (wget=curl is also allowed)
   os=$(uname -s)            # Handles Linux or Darwin, sorry no Windows
  cpu=$(uname -m)            # Handles Linux or Darwin, sorry no Windows
  dry=0                      # dry run?
  
#--HELP

# some help?    
 if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    set +x
    awk 'BEGIN{s=0} {if ($1=="#--HELP") s=1-s;  else if(s) print $0; }' $0
    exit 0
fi
    
# override parameters
for arg in "$@"; do
  export "$arg"
done

if [ "$os" = "Darwin" ]; then
    os=MacOSX
fi

#mc3=$(printf $url $version $os $cpu)      # @todo to be implemented
mc3=$url
msh=$(basename $mc3)

if [ $dry = 1 ]; then
    echo $mc3
    exit 0
fi

if [ -d $dir ]; then
    echo "$dir already exists"
    echo "Remove this directory, or use a new dir="
    exit 1
fi

if [ ! -e $msh ]; then
    if [ $wget = "curl" ]; then
	# curl $mc3 -o $msh
	curl -OL $mc3
    else
	$wget $mc3 
    fi
fi

if [ ! -e $msh ]; then
    echo "File $msh not found. Wrong version=$version ?"
    exit 0
fi

bash $msh -b -p $dir

export PATH="$dir/bin:$PATH"
conda update -y conda
pip3 install --upgrade pip

#    ensure we have a bash kernel in jupyter notebooks
pip install bash_kernel
python -m bash_kernel.install

#    write sourceable shell startup recipes
echo "set path = ($dir/bin "'$path); rehash'  > $dir/python_start.csh
echo "export PATH=${dir}/bin:"'$PATH'         > $dir/python_start.sh

pip freeze > $dir/freeze.log
echo "Created python_start files for $version in $dir ; no modifications were made to your HOME startup files!"
python --version
echo "typically you would need to "
echo "      source $dir/python_start.sh"
echo "to add this python to your shell environment."

# conda install -y ipython numpy scipy matplotlib notebook jupyter astropy

# pip install astroquery
# conda -c astropy astroquery

# pip install image_registration radio_beam reproject spectral_cube
